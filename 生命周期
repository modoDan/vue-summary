beforeCreate 创建前

created  创建后（应用：发起请求）

beforeMount 挂载数据到DOM之前

mounted  挂载数据到DOM之后（应用：操作DOM）
应用：
$nextTick()是在DOM更新循环结束之后执行回调函数，在修改数据之后使用此方法

beforeUpdate 更新DOM之前（应用：可以获取原始DOM）

updated  更新DOM之后（应用：可以获取最新DOM）

beforeDestroy 销毁前
destroyed  销毁后
应用：v-if切换时，会销毁DOM，然后重新渲染加载生命周期

activated 激活
deactivated 停用
应用：
<keep-alive></keep-alive> 缓存组件
能在组件的切换过程中将状态保留在内存中，防止重复渲染，也就是不会销毁了再重建
例如应用在meta权限控制用户登录

#keep-alive
把所有的页面都基于缓存了不用发起第二次请求，

1).include和exclude表示那些组件需要缓存那些组件不需要缓存

<keep-alive :include="tagsList"> <router-view></router-view> </keep-alive>

2).router文件中设置

meta: { keepAlive: true // 需要被缓存 } <keep-alive> <router-view v-if="$route.meta.keepAlive"></router-view> </keep-alive>

当引入keep-alive 的时候，页面第一次进入，钩子的触发顺序created-> mounted-> activated，退出时触发deactivated。当再次进入（前进或者后退）时，只触发activated。再次进入就不在重新解析而是读取内存中的数据

#activated 激活

activated: function () { // 获取数据 }

#deactivated 失活

deactivated: function () {}
